name: CD

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos_intel
            os: macos-latest
            target: x86_64-apple-darwin

          - build: macos_silicon
            os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get install --yes --no-install-recommends musl-tools
          fi
          cargo build --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="tls-bench"
          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          tar -czf "$dirname.tar.gz" "$dirname"
          shasum -a 256 "$dirname.tar.gz" > "$dirname.tar.gz.sha256"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          echo "ASSET_SHA256=$dirname.tar.gz" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
            ${{ env.ASSET_SHA256 }}
